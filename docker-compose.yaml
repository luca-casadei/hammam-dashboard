services:

  # Dashboard made in react
  dashboard:
    ports:
      - ${VITE_PORT}:${VITE_PORT}
    build: ./dashboard/.
    networks:
      - gateway-net
    env_file:
      - path: .env
        required: true
      - path: prod.env
        required: true

  # Anomaly History Provider (Express)
  history-anomaly-rest:
    build: ./history-anomaly-provider/.
    ports:
      - ${HISTORY_ANOMALY_REST_PORT}
    networks:
      - database
      - history-anomaly-net
    env_file:
      - path: .env
        required: true
  
  # History provider (Express)
  history-rest:
    build: ./history-provider/.
    ports:
      - ${HISTORY_REST_PORT}
    env_file:
      - path: .env
        required: true
      - path: prod.env
        required: true
    networks:
      - database
      - history-net
  
#MQTT Client made in Java
  mqtt-client:
    build: ./mqtt-client/.
    networks:
      - mqtt-client-net
      - mqtt-broker-net
      - anomaly-detector-net
    env_file:
      - path: .env
        required: true
    depends_on:
      mqtt-broker:
        condition: service_started
    volumes:
      - ./mqtt-client:/building


#MQTT Broker with Eclipse Mosquitto
  mqtt-broker:
    networks:
      - mqtt-broker-net
    env_file:
      - path: .env
        required: true
    image: eclipse-mosquitto:latest
    volumes:
      - mqtt-data:/mosquitto/data
      - ./mosquitto/config:/mosquitto/config
    ports:
      - 1883:1883


# Gateway Kong
  kong-migrations:
    image: kong/kong-gateway:3.9.1.0
    command: kong migrations bootstrap
    depends_on:
      kong-db:
        condition: service_healthy
    env_file:
      - path: .env
        required: true
      - path: prod.env
        required: true
    networks:
      - gateway-net
    restart: on-failure

  gateway:
    ports:
      - 8000
      - 8443
      - 8001
      - 8444
      - 8002
      - 8445
      - 8003
      - 8004
    image: kong/kong-gateway:3.9.1.0
    networks:
      - gateway-net
      - history-anomaly-net
      - history-net
    env_file:
      - path: .env
        required: true
      - path: prod.env
        required: true
    depends_on:
      kong-migrations:
        condition: service_started

# Gateway DB
  kong-db:
    ports:
      - 5432:5432
    env_file: .env
    image: postgres:13
    restart: unless-stopped
    networks:
      - gateway-net
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-d",
          "kong",
          "-U",
          "kong"
        ]
      interval: 10s
      timeout: 10s
      retries: 3
    volumes:
      - kong-data:/var/lib/postgresql/data

  # MongoDB database
  database:
    image: mongo
    restart: unless-stopped
    ports:
      - ${MONGODB_PORT}
    volumes:
      - mongo-prod:/data/db
      - ./mongo/config/:/docker-entrypoint-initdb.d/:rx
    networks:
      - database
    env_file:
      - path: .env
        required: true
      - path: prod.env
        required: true

  # Anomaly detector made in express
  anomaly-detector:
    build: ./anomaly-detector/.
    ports:
      - ${DETECTOR_PORT}
    networks:
      - anomaly-detector-net
      - database
    env_file:
      - path: .env
        required: true
      - path: prod.env
        required: true

networks:
  mqtt-client-net:
  mqtt-broker-net:
  anomaly-detector-net:
  database:
  gateway-net:
  history-anomaly-net:
  history-net:

volumes:
  mongo-prod: {}
  kong-data: {}
  mqtt-data: {}