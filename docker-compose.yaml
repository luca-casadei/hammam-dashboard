services:

  # Dashboard made in react
  dashboard:
    ports:
      - ${VITE_PORT}:${VITE_PORT}
    build:
      context: ./dashboard/.
      dockerfile: Dockerfile
    env_file:
      - path: .env
        required: true
      - path: prod.env
        required: true
      - path: serve.env
        required: true
    networks:
      gateway-net:
        ipv4_address: 192.169.1.10

  # History provider (Express)
  history-rest:
    build: ./history-provider/.
    ports:
      - ${HISTORY_REST_PORT}:${HISTORY_REST_PORT}
    env_file:
      - path: .env
        required: true
      - path: prod.env
        required: true
    networks:
      database:
      history-net:
        ipv4_address: 192.170.1.2

    volumes:
      - ./history-provider:/node/dev
    depends_on:
      database:
        condition: service_healthy

  #MQTT Client made in Java
  mqtt-client:
    build: ./mqtt-client/.
    networks:
      - mqtt-client-net
      - mqtt-broker-net
      - anomaly-detector-net
    env_file:
      - path: .env
        required: true
    depends_on:
      mqtt-broker:
        condition: service_started
    volumes:
      - ./mqtt-client:/building

  #MQTT Broker with Eclipse Mosquitto
  mqtt-broker:
    networks:
      - mqtt-broker-net
    env_file:
      - path: .env
        required: true
    image: eclipse-mosquitto:latest
    volumes:
      - mqtt-data:/mosquitto/data
      - ./mosquitto/config:/mosquitto/config
    ports:
      - 1883:1883

  # Gateway Kong
  kong-migrations:
    image: kong/kong-gateway:3.9.1.0
    command: sh -c "sleep 30 && kong migrations bootstrap"
    depends_on:
      kong-database:
        condition: service_healthy
    env_file:
      - path: .env
        required: true
      - path: prod.env
        required: true
      - path: migrations.env
        required: true
    networks:
      - gateway-net
    restart: on-failure

  gateway:
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
      - 8002:8002
      - 8445:8445
      - 8003:8003
      - 8004:8004
    image: kong/kong-gateway:3.9.1.0
    networks:
      - gateway-net
      - history-net
    env_file:
      - path: .env
        required: true
      - path: prod.env
        required: true
      - path: migrations.env
        required: true
    depends_on:
      kong-migrations:
        condition: service_started

  # Gateway DB
  kong-database:
    ports:
      - 5432:5432
    env_file:
      - path: .env
        required: true
      - path: migrations.env
        required: true
    image: postgres:13
    networks:
      gateway-net:
        ipv4_address: 192.169.1.2
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "kong", "-U", "kong" ]
      interval: 10s
      timeout: 10s
      retries: 3
    volumes:
      - kong-data-prod:/var/lib/postgresql/data

  # MongoDB database
  database:
    image: mongo
    restart: unless-stopped
    ports:
      - ${MONGODB_PORT}:${MONGODB_PORT}
    volumes:
      # - mongo-prod:/data/db
      - ./mongo/config/:/docker-entrypoint-initdb.d/:rx
    networks:
      - database
    env_file:
      - path: .env
        required: true
      - path: prod.env
        required: true
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://${MONGO_READ_USER}:${MONGO_READ_PASSWORD}@localhost:${MONGODB_PORT}/${MONGO_INITDB_DATABASE} --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  # Anomaly detector made in express
  anomaly-detector:
    build: ./anomaly-detector/.
    ports:
      - ${DETECTOR_PORT}:${DETECTOR_PORT}
    networks:
      - anomaly-detector-net
      - database
    env_file:
      - path: .env
        required: true
      - path: prod.env
        required: true
    depends_on:
      database:
        condition: service_healthy

networks:
  mqtt-client-net:
  mqtt-broker-net:
  anomaly-detector-net:
  database:
  history-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.170.1.0/24
          gateway: 192.170.1.1
  gateway-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.169.1.0/24
          gateway: 192.169.1.1

volumes:
  mongo-prod: {}
  kong-data-prod: {}
  mqtt-data: {}
